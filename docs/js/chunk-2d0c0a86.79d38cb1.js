(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c0a86"],{"435f":function(s,a,e){"use strict";e.r(a);var t=function(){var s=this,a=s.$createElement;s._self._c;return s._m(0)},r=[function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("section",[e("ul",[e("li",[e("ol",[e("li",[e("a",{attrs:{href:"#Link"}},[s._v("Link")])])])]),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[e("a",{attrs:{href:"#Entrypoint"}},[s._v("Entry point")])])])]),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[e("a",{attrs:{href:"#Classdefinition"}},[s._v("Class definition")])])])]),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[e("a",{attrs:{href:"#Arguments"}},[s._v("Arguments")])])])]),e("li",[e("ol",{attrs:{start:"5"}},[e("li",[e("a",{attrs:{href:"#SDLGlConfiguration"}},[s._v("SDL & Gl Configuration")])])])]),e("li",[e("ol",{attrs:{start:"6"}},[e("li",[e("a",{attrs:{href:"#CameraInitialization"}},[s._v("Camera Initialization")])])])]),e("li",[e("ol",{attrs:{start:"7"}},[e("li",[e("a",{attrs:{href:"#WhatsanObject2DScene2D"}},[s._v("What's an Object2D & Scene2D")])])])]),e("li",[e("ol",{attrs:{start:"8"}},[e("li",[e("a",{attrs:{href:"#WhatscreateBody"}},[s._v("What's createBody?")])])]),e("ul",[e("li",[s._v("8.1. "),e("a",{attrs:{href:"#b2BodyType"}},[s._v("b2BodyType")])]),e("li",[s._v("8.2. "),e("a",{attrs:{href:"#DualComplex"}},[s._v("DualComplex?")])]),e("li",[s._v("8.3. "),e("a",{attrs:{href:"#DefaultvaluefordensityincreateBody"}},[s._v("Default value for density in createBody")])]),e("li",[s._v("8.4. "),e("a",{attrs:{href:"#CreateBodyDefinition"}},[s._v("Create Body Definition")]),e("ul",[e("li",[s._v("8.4.1. "),e("a",{attrs:{href:"#b2BodyDef"}},[s._v("b2BodyDef")])]),e("li",[s._v("8.4.2. "),e("a",{attrs:{href:"#CreateBody"}},[s._v("CreateBody")])])])])])]),e("li",[e("ol",{attrs:{start:"9"}},[e("li",[e("a",{attrs:{href:"#NoCreate"}},[s._v("NoCreate")])])])]),e("li",[e("ol",{attrs:{start:"10"}},[e("li",[e("a",{attrs:{href:"#Shaders"}},[s._v("Shaders")])])]),e("ul",[e("li",[s._v("10.1. "),e("a",{attrs:{href:"#Callsiteuse"}},[s._v("Call site use")])]),e("li",[s._v("10.2. "),e("a",{attrs:{href:"#Flat2D"}},[s._v("Flat2D?")])])])]),e("li",[e("ol",{attrs:{start:"11"}},[e("li",[e("a",{attrs:{href:"#Meshes"}},[s._v("Meshes")])])])]),e("li",[e("ol",{attrs:{start:"12"}},[e("li",[e("a",{attrs:{href:"#BoxDrawable"}},[s._v("BoxDrawable")])])]),e("ul",[e("li",[s._v("12.1. "),e("a",{attrs:{href:"#IssuecreatingaBoxDrawable"}},[s._v("Issue creating a BoxDrawable")])])])]),e("li",[e("ol",{attrs:{start:"13"}},[e("li",[e("a",{attrs:{href:"#EntityComponentsystemMagnum"}},[s._v("Entity Component system + Magnum")])])])])]),e("h1",[s._v("Walk through example: Box2dExample")]),e("h2",[s._v("1. "),e("a",{attrs:{name:"Link"}}),s._v("Link")]),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/mosra/magnum-examples/tree/master/src/box2d"}},[s._v("Magnum Box2d Example")])])]),e("h2",[s._v("2. "),e("a",{attrs:{name:"Entrypoint"}}),s._v("Entry point")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[s._v("MAGNUM_APPLICATION_MAIN(Magnum::Examples::Box2DExample)\n")])]),e("h2",[s._v("3. "),e("a",{attrs:{name:"Classdefinition"}}),s._v("Class definition")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Box2DExample")]),s._v(" :")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Platform::Application {\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(":\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("explicit")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Box2DExample")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Arguments &arguments)")])]),s._v(";\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(":\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("drawEvent")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("override")])]),s._v(";\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("mousePressEvent")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(MouseEvent &event)")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("override")])]),s._v(";\n\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("b2Body *"),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("createBody")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Object2D &object, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Vector2 &size, b2BodyType type,\n                     "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" DualComplex &transformation, Float density = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0f")]),s._v(")")])]),s._v(";\n\n  GL::Mesh _mesh{NoCreate};\n  GL::Buffer _instanceBuffer{NoCreate};\n  Shaders::Flat2D _shader{NoCreate};\n  Containers::Array<InstanceData> _instanceData;\n\n  Scene2D _scene;\n  Object2D *_cameraObject;\n  SceneGraph::Camera2D *_camera;\n  SceneGraph::DrawableGroup2D _drawables;\n  Containers::Optional<b2World> _world;\n};\n")])]),e("h2",[s._v("4. "),e("a",{attrs:{name:"Arguments"}}),s._v("Arguments")]),e("ul",[e("li",[s._v("Arguments processes argc and argv in the [Type]Application Magnum specific implementation e.g. Sdl2")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("\nBox2DExample::Box2DExample("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Arguments &arguments)\n    : Platform::Application{arguments, NoCreate} {\n  "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Make it possible for the user to have some fun */")]),s._v("\n  Utility::Arguments args;\n  args.addOption("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"transformation"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"1 0 0 0"')]),s._v(")\n      .setHelp("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"transformation"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"initial pyramid transformation"')]),s._v(")\n      .addSkippedPrefix("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"magnum"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"engine-specific options"')]),s._v(")\n      .parse(arguments.argc, arguments.argv);\n\n")])]),e("ul",[e("li",[s._v("Argument values are referenced like so")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[s._v(" args.value<DualComplex>("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"transformation"')]),s._v(").normalized();\n")])]),e("h2",[s._v("5. "),e("a",{attrs:{name:"SDLGlConfiguration"}}),s._v("SDL & Gl Configuration")]),e("ul",[e("li",[s._v("Platform Specific configuration (sdl2) and gl configuration")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Vector2 dpiScaling = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("->dpiScaling({});\n    Configuration conf;\n    conf.setTitle("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Magnum Box2D Example"')]),s._v(").setSize(conf.size(), dpiScaling);\n    GLConfiguration glConf;\n    glConf.setSampleCount(dpiScaling.max() < "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2.0f")]),s._v(" ? "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v(" : "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(");\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!tryCreate(conf, glConf))\n      create(conf, glConf.setSampleCount("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("));\n  }\n")])]),e("h2",[s._v("6. "),e("a",{attrs:{name:"CameraInitialization"}}),s._v("Camera Initialization")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("  "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Configure camera */")]),s._v("\n  _cameraObject = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Object2D{&_scene};\n  _camera = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" SceneGraph::Camera2D{*_cameraObject};\n  _camera->setAspectRatioPolicy(SceneGraph::AspectRatioPolicy::Extend)\n      .setProjectionMatrix(Matrix3::projection({"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("20.0f")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("20.0f")]),s._v("}))\n      .setViewport(GL::defaultFramebuffer.viewport().size());\n")])]),e("h2",[s._v("7. "),e("a",{attrs:{name:"WhatsanObject2DScene2D"}}),s._v("What's an Object2D & Scene2D")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typedef")]),s._v(" SceneGraph::Object<\n    SceneGraph::TranslationRotationScalingTransformation2D>\n    Object2D;\n")])]),e("ul",[e("li",[e("p",[s._v("Scenegraph part of Magnum")])]),e("li",[e("p",[s._v("class that has translation, rotation, transformation etc..")])]),e("li",[e("p",[s._v("In this case we can see it's set to a *_cameraObject")])]),e("li",[e("p",[s._v("What's a Scene2D?")])])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typedef")]),s._v(" SceneGraph::Scene<\n    SceneGraph::TranslationRotationScalingTransformation2D>\n    Scene2D;\n")])]),e("ul",[e("li",[e("p",[s._v('Same as Object2D but for "Scene"')])]),e("li",[e("p",[s._v("More box2d stuff")])])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("  "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Create the ground */")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("auto")]),s._v(" ground = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Object2D{&_scene}\n  createBody(*ground, {"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("11.0f")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.5f")]),s._v("}, b2_staticBody,\n             DualComplex::translation(Vector2::yAxis("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-8.0f")]),s._v(")));\n  "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" BoxDrawable{*ground, _instanceData, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0xa5c9ea")]),s._v("_rgbf, _drawables};\n")])]),e("h2",[s._v("8. "),e("a",{attrs:{name:"WhatscreateBody"}}),s._v("What's createBody?")]),e("ul",[e("li",[s._v("First call to createBody")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("b2Body *"),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Box2DExample::createBody")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Object2D &object, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Vector2 &halfSize,\n                                 "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" b2BodyType type,\n                                 "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" DualComplex &transformation,\n                                 "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Float density)")]),s._v(" ")]),s._v("{\n")])]),e("h3",[s._v("8.1. "),e("a",{attrs:{name:"b2BodyType"}}),s._v("b2BodyType")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/// The body type.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/// static: zero mass, zero velocity, may be manually moved")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/// kinematic: zero mass, non-zero velocity set by user, moved by solver")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/// dynamic: positive mass, non-zero velocity determined by forces, moved by solver")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("enum")]),s._v(" b2BodyType\n{\n\tb2_staticBody = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n\tb2_kinematicBody,\n\tb2_dynamicBody\n};\n")])]),e("h3",[s._v("8.2. "),e("a",{attrs:{name:"DualComplex"}}),s._v("DualComplex?")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/** @brief Float dual complex number */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typedef")]),s._v(" Math::DualComplex<Float> DualComplex;\n")])]),e("h3",[s._v("8.3. "),e("a",{attrs:{name:"DefaultvaluefordensityincreateBody"}}),s._v("Default value for density in createBody")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("b2Body *"),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("createBody")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Object2D &object, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Vector2 &size, b2BodyType type,\n                     "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" DualComplex &transformation, Float density = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0f")]),s._v(")")])]),s._v(";\n")])]),e("h3",[s._v("8.4. "),e("a",{attrs:{name:"CreateBodyDefinition"}}),s._v("Create Body Definition")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("b2Body *"),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Box2DExample::createBody")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Object2D &object, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Vector2 &halfSize,\n                                 "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" b2BodyType type,\n                                 "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" DualComplex &transformation,\n                                 "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Float density)")]),s._v(" ")]),s._v("{\n  b2BodyDef bodyDefinition;\n  bodyDefinition.position.Set(transformation.translation().x(),\n                              transformation.translation().y());\n  bodyDefinition.angle = Float(transformation.rotation().angle());\n  bodyDefinition.type = type;\n  b2Body *body = _world->CreateBody(&bodyDefinition);\n\n  b2PolygonShape shape;\n  shape.SetAsBox(halfSize.x(), halfSize.y());\n\n  b2FixtureDef fixture;\n  fixture.friction = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.8f")]),s._v(";\n  fixture.density = density;\n  fixture.shape = &shape;\n  body->CreateFixture(&fixture);\n\n"),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("ifndef")]),s._v(" IT_IS_THE_OLD_BOX2D")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Why keep things simple if there's an awful and backwards-incompatible\n     way, eh? https://github.com/erincatto/box2d/pull/658 */")]),s._v("\n  body->GetUserData().pointer = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("reinterpret_cast")]),s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("std")]),s._v("::"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("uintptr_t")]),s._v(">(&object);\n"),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("else")])]),s._v("\n  body->SetUserData(&object);\n"),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("endif")])]),s._v("\n  object.setScaling(halfSize);\n\n  "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" body;\n}\n")])]),e("p",[s._v("See call site again")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("  createBody(*ground, {"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("11.0f")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.5f")]),s._v("}, b2_staticBody,\n             DualComplex::translation(Vector2::yAxis("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-8.0f")]),s._v(")));\n")])]),e("p",[s._v("Ok so it's setting gravity -8.0f")]),e("h4",[s._v("8.4.1. "),e("a",{attrs:{name:"b2BodyDef"}}),s._v("b2BodyDef")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/// A body definition holds all the data needed to construct a rigid body.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/// You can safely re-use body definitions. Shapes are added to a body after construction.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("B2_API")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("b2BodyDef")]),s._v("\n{")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/// This constructor sets the body definition default values.")]),s._v("\n\tb2BodyDef()\n\t{\n\t\tposition.Set("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0f")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0f")]),s._v(");\n\t\tangle = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0f")]),s._v(";\n\t\tlinearVelocity.Set("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0f")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0f")]),s._v(");\n\t\tangularVelocity = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0f")]),s._v(";\n\t\tlinearDamping = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0f")]),s._v(";\n\t\tangularDamping = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0f")]),s._v(";\n\t\tallowSleep = "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(";\n\t\tawake = "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(";\n\t\tfixedRotation = "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(";\n\t\tbullet = "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(";\n\t\ttype = b2_staticBody;\n\t\tenabled = "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(";\n\t\tgravityScale = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0f")]),s._v(";\n\t}\n}\n")])]),e("h4",[s._v("8.4.2. "),e("a",{attrs:{name:"CreateBody"}}),s._v("CreateBody")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("b2Body *body = _world->CreateBody(&bodyDefinition);\n  b2PolygonShape shape;\n  shape.SetAsBox(halfSize.x(), halfSize.y());\n\n  b2FixtureDef fixture;\n  fixture.friction = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.8f")]),s._v(";\n  fixture.density = density;\n  fixture.shape = &shape;\n  body->CreateFixture(&fixture);\n\n"),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("ifndef")]),s._v(" IT_IS_THE_OLD_BOX2D")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Why keep things simple if there's an awful and backwards-incompatible\n     way, eh? https://github.com/erincatto/box2d/pull/658 */")]),s._v("\n  body->GetUserData().pointer = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("reinterpret_cast")]),s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("std")]),s._v("::"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("uintptr_t")]),s._v(">(&object);\n"),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("else")])]),s._v("\n  body->SetUserData(&object);\n"),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("endif")])]),s._v("\n  object.setScaling(halfSize);\n  "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" body;\n")])]),e("h2",[s._v("9. "),e("a",{attrs:{name:"NoCreate"}}),s._v("NoCreate")]),e("ul",[e("li",[s._v("This is a constexpr Tag defined in Tags.h")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-cpp"}},[s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/**\n@brief No creation tag\n\nUse for construction with initialization, but keeping the instance empty\n(usually equivalent to a moved-out state).\n*/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constexpr")]),s._v(" NoCreateT NoCreate{NoCreateT::Init{}};\n\n...\n...\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Explicit constructor to avoid ambiguous calls when using {} */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("NoCreateT")]),s._v(" {")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("ifndef")]),s._v(" DOXYGEN_GENERATING_OUTPUT")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Init")]),s._v("{")]),s._v("};\n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constexpr")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("explicit")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("NoCreateT")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Init)")]),s._v(" ")]),s._v("{}\n    "),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("endif")])]),s._v("\n};\n")])]),e("p",[s._v("When defined like such in the class constructor")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[s._v("\nHelloWorld::HelloWorld("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Arguments &arguments)\n    : Platform::Application{arguments, NoCreate} {\n")])]),e("p",[s._v("It will not spawn an SDL2 window when created")]),e("h2",[s._v("10. "),e("a",{attrs:{name:"Shaders"}}),s._v("Shaders")]),e("p",[s._v("Magnum Shaders definition")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("namespace")]),s._v(" Magnum { "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("namespace")]),s._v(" Shaders {\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("namespace")]),s._v(" Implementation {\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("enum")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("FlatFlag")]),s._v(":")]),s._v(" UnsignedByte {\n        Textured = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" << "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n        AlphaMask = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" << "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n        VertexColor = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" << "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(",\n        TextureTransformation = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" << "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(",\n        #ifndef MAGNUM_TARGET_GLES2\n        ObjectId = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" << "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(",\n        InstancedObjectId = ("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" << "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(")|ObjectId,\n        #endif\n        InstancedTransformation = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" << "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("6")]),s._v(",\n        InstancedTextureOffset = ("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" << "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7")]),s._v(")|TextureTransformation\n    };\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typedef")]),s._v(" Containers::EnumSet<FlatFlag> FlatFlags;\n}\n")])]),e("h3",[s._v("10.1. "),e("a",{attrs:{name:"Callsiteuse"}}),s._v("Call site use")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[s._v("   "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Create an instanced shader */")]),s._v("\n    _shader = Shaders::Flat2D{Shaders::Flat2D::Flag::VertexColor |\n                              Shaders::Flat2D::Flag::InstancedTransformation};\n  }\n")])]),e("h3",[s._v("10.2. "),e("a",{attrs:{name:"Flat2D"}}),s._v("Flat2D?")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/** @brief 2D flat shader */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typedef")]),s._v(" Flat<"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("> Flat2D;\n\n...\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("template")]),s._v("<UnsignedInt dimensions> "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("MAGNUM_SHADERS_EXPORT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Flat")]),s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" GL::AbstractShaderProgram {\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(":\n        "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('/**\n         * @brief Vertex position\n         *\n         * @ref shaders-generic "Generic attribute",\n         * @ref Magnum::Vector2 "Vector2" in 2D, @ref Magnum::Vector3 "Vector3"\n         * in 3D.\n         */')]),s._v("\n\n...\n\n\n"),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("MAGNUM_GL_EXPORT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("AbstractShaderProgram")]),s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" AbstractObject {\n    "),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("ifndef")]),s._v(" MAGNUM_TARGET_GLES2")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("friend")]),s._v(" TransformFeedback;\n    "),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("endif")])]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("friend")]),s._v(" Implementation::ShaderProgramState;\n\n")])]),e("p",[s._v("Reading the docstring above Flat we can see it says:")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("Draws the whole mesh with given color or texture. For a colored mesh you need\nto provide the @ref Position attribute in your triangle mesh. By default, the\nshader renders the mesh with a white color in an identity transformation.\nUse @ref setTransformationProjectionMatrix(), @ref setColor() and others to\nconfigure the shader.\n")])]),e("p",[s._v("So it will generate a shader for you... vertex + pixel?")]),e("h2",[s._v("11. "),e("a",{attrs:{name:"Meshes"}}),s._v("Meshes")]),e("p",[s._v("Compile with MeshTools and supply a primitive like "),e("code",{pre:!0},[s._v("squareSolid()")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[s._v("    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Box mesh with an (initially empty) instance buffer */")]),s._v("\n    _mesh = MeshTools::compile(Primitives::squareSolid());\n    _instanceBuffer = GL::Buffer{};\n    _mesh.addVertexBufferInstanced(_instanceBuffer, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n                                   Shaders::Flat2D::TransformationMatrix{},\n                                   Shaders::Flat2D::Color3{});\n")])]),e("p",[s._v("So this creates a vertex buffer for you.. cool..")]),e("p",[s._v("Look under magnum Primitives folder for all types of primitives including:")]),e("ul",[e("li",[s._v("Axis")]),e("li",[s._v("Capsule")]),e("li",[s._v("Circle")]),e("li",[s._v("Cone")]),e("li",[s._v("Gradiant")]),e("li",[s._v("Line")]),e("li",[s._v("Square")]),e("li",[s._v("UV Sphere.. etc")])]),e("h2",[s._v("12. "),e("a",{attrs:{name:"BoxDrawable"}}),s._v("BoxDrawable")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("BoxDrawable")]),s._v(" :")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" SceneGraph::Drawable2D {\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(":\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("explicit")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("BoxDrawable")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Object2D &object,\n                       Containers::Array<InstanceData> &instanceData,\n                       "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Color3 &color,\n                       SceneGraph::DrawableGroup2D &drawables)")]),s._v("\n      : SceneGraph::Drawable2D")]),s._v("{object, &drawables},\n        _instanceData(instanceData), _color{color} {}\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(":\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("draw")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Matrix3 &transformation, SceneGraph::Camera2D &)")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("override")]),s._v(" ")]),s._v("{\n    arrayAppend(_instanceData, Containers::InPlaceInit, transformation, _color);\n  }\n\n  Containers::Array<InstanceData> &_instanceData;\n  Color3 _color;\n};\n")])]),e("p",[s._v("arrayAppend depends on:")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("include")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-meta-string"}},[s._v("<Corrade/Containers/Array.h>")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("include")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-meta-string"}},[s._v("<Corrade/Containers/GrowableArray.h>")])]),s._v("\n")])]),e("p",[s._v("Where the array type is the "),e("code",{pre:!0},[s._v("instanceData")]),s._v(" -- see "),e("code",{pre:!0},[s._v("Containers::Array<InstanceData>")])]),e("p",[s._v("and InstanceData is simply")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("InstanceData")]),s._v(" {")]),s._v("\n  Matrix3 transformation;\n  Color3 color;\n};\n")])]),e("p",[s._v("Interestingly note that it's a AOS rather than SOA.. so this isn't entity component driven?")]),e("h3",[s._v("12.1. "),e("a",{attrs:{name:"IssuecreatingaBoxDrawable"}}),s._v("Issue creating a BoxDrawable")]),e("ul",[e("li",[s._v("This call")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" BoxDrawable{*ground, _instanceData, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0xa5c9ea")]),s._v("_rgbf, _drawables};\n")])]),e("p",[s._v("This hex value + _rgbf complains:")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v(" error: no matching literal operator "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" call to "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'operator\"\"_rgbf'")]),s._v(" with\n      argument of "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("type")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'unsigned long long'")]),s._v(" or "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'const char *'")]),s._v(", and no matching literal operator template\n  new BoxDrawable{*ground, _instanceData, 0xa5c9ea_rgbf, _drawables};\n")])]),e("ul",[e("li",[s._v("Documentation suggests: "),e("a",{attrs:{href:"https://doc.magnum.graphics/magnum/namespaceMagnum_1_1Math_1_1Literals.html"}},[s._v("https://doc.magnum.graphics/magnum/namespaceMagnum_1_1Math_1_1Literals.html")])])]),e("p",[s._v("Thing that's missing")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-c++"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("using")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("namespace")]),s._v(" Math::Literals;\n")])]),e("h2",[s._v("13. "),e("a",{attrs:{name:"EntityComponentsystemMagnum"}}),s._v("Entity Component system + Magnum")]),e("ul",[e("li",[s._v("Here's an implementation of ENTT pong with magnum by skypjack the creator of entt")]),e("li",[e("a",{attrs:{href:"https://gist.github.com/skypjack/598a4864a31ada6d3f18192a11de1923"}},[s._v("Entt + Magnum + Pong == ✅")])])]),e("p",[s._v("I asked about ENTT AOS / SOA in magnum")]),e("p",[s._v("See response:")]),e("p",[s._v("Interleaved (AoS) attributes are usually the better choice for vertex buffers if all the attributes are read together on the GPU. There might be a performance impact when filling it on the CPU, you'd have to time that. If you really need SoA, call addVertexBufferInstanced multiple times, example here. That entt example doesn't use instancing so you'll have one draw call per object, but it should be fairly easy to convert to filling out an instance buffer.")]),e("ul",[e("li",[e("a",{attrs:{href:"https://doc.magnum.graphics/magnum/classMagnum_1_1GL_1_1Mesh.html#a7f3faf30ff104d7db5cfe3f8cbf5031e"}},[s._v("https://doc.magnum.graphics/magnum/classMagnum_1_1GL_1_1Mesh.html#a7f3faf30ff104d7db5cfe3f8cbf5031e")])])])])}],n=e("2877"),l={},p=Object(n["a"])(l,t,r,!1,null,null,null);a["default"]=p.exports}}]);